# 使用Wine在Linux容器中构建Windows .exe文件
FROM ubuntu:20.04

# 设置非交互模式
ENV DEBIAN_FRONTEND=noninteractive

# 安装必要的包
RUN apt-get update && apt-get install -y \
    wget \
    software-properties-common \
    gnupg2 \
    && rm -rf /var/lib/apt/lists/*

# 添加Wine仓库
RUN wget -nc https://dl.winehq.org/wine-builds/winehq.key \
    && apt-key add winehq.key \
    && add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'

# 安装Wine和Python
RUN apt-get update && apt-get install -y \
    winehq-stable \
    xvfb \
    && rm -rf /var/lib/apt/lists/*

# 设置Wine环境
ENV WINEPREFIX=/root/.wine
ENV WINEARCH=win64
ENV DISPLAY=:99

# 初始化Wine
RUN Xvfb :99 -screen 0 1024x768x16 & \
    wine --version && \
    wineboot --init

# 下载并安装Python for Windows
RUN wget https://www.python.org/ftp/python/3.9.13/python-3.9.13-amd64.exe \
    && Xvfb :99 -screen 0 1024x768x16 & \
    wine python-3.9.13-amd64.exe /quiet InstallAllUsers=1 PrependPath=1 \
    && rm python-3.9.13-amd64.exe

# 设置工作目录
WORKDIR /app

# 复制项目文件
COPY . .

# 安装Python依赖
RUN Xvfb :99 -screen 0 1024x768x16 & \
    wine python -m pip install --upgrade pip && \
    wine python -m pip install -r requirements.txt && \
    wine python -m pip install pyinstaller

# 构建脚本
COPY build_in_docker.py .

# 设置入口点
CMD ["bash", "-c", "Xvfb :99 -screen 0 1024x768x16 & wine python build_in_docker.py"]
